name: Python CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

jobs:
  compile:
    name: Compile Python app

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Compile Python app
        run: python3 -m compileall .

  test:
    name: Run tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: 'Set up Poetry'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        env:
          EOKUL_UID: ${{ secrets.EOKUL_UID }}
        run: poetry run pytest --tb=no

  build:
    name: Build package

    needs:
      - compile
      - test

    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 'Set up Poetry'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Build package
        run: poetry build --no-interaction

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  release:
    name: Release package
    
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish package on PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package on GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          draft: false
          prerelease: false
          tag_name: ${{ github.ref }}
          name: ${{  github.ref_name }}
          generate_release_notes: true
